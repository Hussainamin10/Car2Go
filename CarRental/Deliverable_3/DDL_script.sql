
USE MASTER
GO

DROP DATABASE IF EXISTS Car2Go;

/*
--because of the lab computers. They have databases and tables that are already pre made, which cause problems when we try to execute
DROP DATABASE IF EXISTS aviation_mtl;

DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS INVOICE;
DROP TABLE IF EXISTS LINE;
DROP TABLE IF EXISTS PRODUCT;
DROP TABLE IF EXISTS VENDOR;
DROP TABLE IF EXISTS ADDRESS;

*/


DROP TABLE IF EXISTS PAYMENT;
DROP TABLE IF EXISTS RENTING_DETAIL;
DROP TABLE IF EXISTS PROMOTION;
DROP TABLE IF EXISTS CAR;
DROP TABLE IF EXISTS CAR_CLASS;
DROP TABLE IF EXISTS COMPANY_LOCATION;
DROP TABLE IF EXISTS PHONE_NUMBER;
DROP TABLE IF EXISTS EMAIL;
DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS ADDRESS;
DROP FUNCTION IF EXISTS checkReturnID;
DROP FUNCTION IF EXISTS checkPromotionID;

CREATE DATABASE Car2Go
GO

USE Car2Go
GO

CREATE TABLE ADDRESS(
	ADDRESS_ID VARCHAR(10) NOT NULL CONSTRAINT pk_address_ID PRIMARY KEY,
	CITY VARCHAR(20) ,
	PROVINCE VARCHAR(20) ,
	POSTAL_CODE VARCHAR(20),
	BUILDING_NUMBER INT , 
	STREET_NAME VARCHAR(20) 
);

CREATE TABLE CUSTOMER(	
	DRIVER_LICENSE_NO VARCHAR(20) NOT NULL CONSTRAINT pk_driver_license_ID PRIMARY KEY,
	ADDRESS_ID VARCHAR(10) NOT NULL FOREIGN KEY REFERENCES  ADDRESS( ADDRESS_ID ),
	FIRST_NAME VARCHAR(20),
	LAST_NAME VARCHAR(20),
	APPARTMENT_NUMBER INT,
	COUNTRY VARCHAR(20)	
);

CREATE TABLE EMAIL(	
	DRIVER_LICENSE_NO VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES CUSTOMER(DRIVER_LICENSE_NO) ,
	EMAIL_ADDRESS VARCHAR(50),
	primary key( DRIVER_LICENSE_NO, EMAIL_ADDRESS )
);

CREATE TABLE PHONE_NUMBER(
	DRIVER_LICENSE_NO VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES CUSTOMER(DRIVER_LICENSE_NO),
	COUNTRY_CODE VARCHAR(50),
	AREA_CODE INT,
	LOCAL_NUMBER VARCHAR(50)
	PRIMARY KEY( DRIVER_LICENSE_NO, COUNTRY_CODE, AREA_CODE,LOCAL_NUMBER )
);

CREATE TABLE COMPANY_LOCATION(	
	LOCATION_ID VARCHAR(10) NOT NULL CONSTRAINT pk_location_ID PRIMARY KEY,
	ADDRESS_ID VARCHAR(10) NOT NULL FOREIGN KEY REFERENCES  ADDRESS( ADDRESS_ID)
);

CREATE TABLE CAR_CLASS (
	CLASS_DESCRIPTION VARCHAR(20) NOT NULL CONSTRAINT pk_class_description PRIMARY KEY,
	CAR_CLASS_PRICE MONEY
);

CREATE TABLE CAR (	
	LICENSE_PLATE VARCHAR(20) NOT NULL CONSTRAINT pk_license_plate PRIMARY KEY ,
	CLASS_DESCRIPTION VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES CAR_CLASS(CLASS_DESCRIPTION),
	LOCATION_ID VARCHAR(10) NOT NULL FOREIGN KEY REFERENCES COMPANY_LOCATION ( LOCATION_ID),
	MAKE VARCHAR(20),
	MODEL VARCHAR(40),
	YEAR_MADE INT,
	COLOR VARCHAR(30)
);

CREATE TABLE PROMOTION(	
	PROMOTION_ID VARCHAR(10),
	CLASS_DESCRIPTION VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES CAR_CLASS(CLASS_DESCRIPTION),
	DISCOUNT INT,
	START_DATE DATE,
	END_DATE DATE,
	PRIMARY KEY (PROMOTION_ID, CLASS_DESCRIPTION)
);

CREATE TABLE RENTING_DETAIL(	
	RETURN_ID VARCHAR(10) NOT NULL,
	DAY_RENTED DATE NOT NULL,
	DAY_RETURNED DATE NOT NULL,
	LICENSE_PLATE VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES CAR(LICENSE_PLATE),
	DRIVER_LICENSE_NO VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES CUSTOMER(DRIVER_LICENSE_NO),
	ODOMETER_BEFORE INT ,
	ODOMETER_AFTER INT,
	TANK_VOLUME VARCHAR(30),
	NUM_DAYS_RENTED INT,
	PICKUP_COMPANY_LOCATION VARCHAR(10) NOT NULL FOREIGN KEY REFERENCES ADDRESS ( ADDRESS_ID ),	
	DROPOFF_COMPANY_LOCATION VARCHAR(10) NOT NULL FOREIGN KEY REFERENCES ADDRESS ( ADDRESS_ID ),	
	PRIMARY KEY ( RETURN_ID, DAY_RENTED, DAY_RETURNED )
);

CREATE FUNCTION checkPromotionID(@Value VARCHAR(20))
RETURNS VARCHAR(20)
AS
BEGIN
	IF EXISTS (SELECT * FROM RENTING_DETAIL WHERE RETURN_ID = @Value)
		RETURN 'TRUE'
	ELSE
		RETURN 'FALSE'
RETURN 'FALSE'
END
GO

CREATE FUNCTION checkReturnID(@Value VARCHAR(20))
RETURNS VARCHAR(20)
AS
BEGIN
	IF EXISTS (SELECT * FROM PROMOTION WHERE PROMOTION_ID = @Value)
		RETURN 'TRUE'
	ELSE
		RETURN 'FALSE'
RETURN 'FALSE'
END
GO

CREATE TABLE PAYMENT(
	BILLING_ID VARCHAR(10) UNIQUE,
	CLASS_DESCRIPTION VARCHAR(20) NOT NULL FOREIGN KEY REFERENCES CAR_CLASS( CLASS_DESCRIPTION ),
	PROMOTION_ID VARCHAR(10) CONSTRAINT check_Promotion_id CHECK (dbo.checkPromotionID(PROMOTION_ID) = 'True') ,
	RETURN_ID VARCHAR(10) NOT NULL CONSTRAINT check_Return_id CHECK ( dbo.checkReturnID(RETURN_ID) = 'True'),
	TOTAL_AMOUNT MONEY
);

SELECT * FROM ADDRESS;
SELECT * FROM CUSTOMER;
SELECT * FROM EMAIL;
SELECT * FROM PHONE_NUMBER;
SELECT * FROM COMPANY_LOCATION;
SELECT * FROM CAR;
SELECT * FROM CAR_CLASS;
SELECT * FROM PROMOTION;
SELECT * FROM RENTING_DETAIL;
SELECT * FROM PAYMENT;